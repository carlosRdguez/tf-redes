version: '1.0.0.{build}'
branches:
  only:
    - master
    - commonlib

image: Visual Studio 2017
clone_depth: 1
environment:
  global:
    LatestLTSQtVersion: 5.13
  matrix:
  - QT5: C:\Qt\%LatestLTSQtVersion%\msvc2017
    COMPILER: C:\Program Files (x86)\Microsoft Visual Studio\2017\Community\VC\Auxiliary\Build
    use_mingw: "false"
    use_cmake: "true"
  - QT5: C:\Qt\%LatestLTSQtVersion%\msvc2017
    COMPILER: C:\Program Files (x86)\Microsoft Visual Studio\2017\Community\VC\Auxiliary\Build
    use_mingw: "false"
    use_cmake: "false"
  - QT5: C:\Qt\%LatestLTSQtVersion%\mingw73_32
    COMPILER: C:\Qt\Tools\mingw730_32
    use_mingw: "true"
    use_cmake: "true"
  - QT5: C:\Qt\%LatestLTSQtVersion%\mingw73_32
    COMPILER: C:\Qt\Tools\mingw730_32
    use_mingw: "true"
    use_cmake: "false"


matrix:
  fast_finish: true

before_build:
- set SOURCEDIR=%cd%
- call "%QT5%\bin\qtenv2.bat"
- cd /D %SOURCEDIR%
- if not %use_mingw%==true call "%COMPILER%\vcvarsall.bat" x86
- if %use_mingw%==true (set CMAKEGENERATOR="MinGW Makefiles") else (set CMAKEGENERATOR="NMake Makefiles")
- if %use_mingw%==true set PATH=%PATH:C:\Program Files\Git\usr\bin;=%

build_script:
- if %use_cmake%==true mkdir ./build
- if %use_cmake%==true cd ./build
- if %use_cmake%==true cmake -G %CMAKEGENERATOR% -DCMAKE_BUILD_TYPE=RELEASE ../
- if %use_cmake%==true cmake --build .
- if %use_cmake%==true cmake -G %CMAKEGENERATOR% -DCMAKE_BUILD_TYPE=DEBUG -DCMAKE_DEBUG_POSTFIX=d ../
- if %use_cmake%==true cmake --build .
- if not %use_cmake%==true qmake QtSimpleChat.pro
- if not %use_cmake%==true if %use_mingw%==true mingw32-make debug
- if not %use_cmake%==true if %use_mingw%==true mingw32-make release
- if not %use_cmake%==true if not %use_mingw%==true nmake debug
- if not %use_cmake%==true if not %use_mingw%==true nmake release